{
  "id": "ccbdade9-6b57-4a14-85be-2546ab2f39fe",
  "dataLocation": "%StaticContentRoot%\\Extensions\\styled-lists\\styled-lists.js",
  "logicalPath": "/extensions/styled-lists/styled-lists.js",
  "externalPath": "/extensions/styled-lists/styled-lists.js",
  "serveOptions": 0,
  "Content": "var isDefaultSelected = false;\n\ndefine([\"jquery\", \"text!./style.css\"], function ($, cssContent) {\n\t'use strict'\n\t$(\"<style>\").html(cssContent).appendTo(\"head\");\n\treturn {\n\t\tinitialProperties: {\n\t\t\tversion: 1.1,\n\t\t\tqListObjectDef: {\n\t\t\t\tqShowAlternatives: true,\n\t\t\t\tqFrequencyMode: \"V\",\n\t\t\t\tqInitialDataFetch: [{\n\t\t\t\t\tqWidth: 1,\n\t\t\t\t\tqHeight: 150\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\tdefinition: {\n\t\t\ttype: \"items\",\n\t\t\tcomponent: \"accordion\",\n\t\t\titems: {\n\t\t\t\tdimension: {\n\t\t\t\t\ttype: \"items\",\n\t\t\t\t\ttranslation: \"Dimension\",\n\t\t\t\t\tref: \"qListObjectDef\",\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 1,\n\t\t\t\t\titems: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tref: \"qListObjectDef.qDef.qFieldLabels.0\",\n\t\t\t\t\t\t\ttranslation: \"Label\",\n\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlibraryId: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tcomponent: \"library-item\",\n\t\t\t\t\t\t\tlibraryItemType: \"dimension\",\n\t\t\t\t\t\t\tref: \"qListObjectDef.qLibraryId\",\n\t\t\t\t\t\t\ttranslation: \"Dimension\",\n\t\t\t\t\t\t\tshow: function (data) {\n\t\t\t\t\t\t\t\treturn data.qListObjectDef && data.qListObjectDef.qLibraryId;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\texpression: \"always\",\n\t\t\t\t\t\t\texpressionType: \"dimension\",\n\t\t\t\t\t\t\tref: \"qListObjectDef.qDef.qFieldDefs.0\",\n\t\t\t\t\t\t\ttranslation: \"Field\",\n\t\t\t\t\t\t\tshow: function (data) {\n\t\t\t\t\t\t\t\treturn data.qListObjectDef && !data.qListObjectDef.qLibraryId;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsettings: {\n\t\t\t\t\tuses: \"settings\",\n\t\t\t\t\titems: {\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\ttype: \"items\",\n\t\t\t\t\t\t\tlabel: \"Options\",\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\torientation: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tcomponent: \"radiobuttons\",\n\t\t\t\t\t\t\t\t\tlabel: \"Orientation\",\n\t\t\t\t\t\t\t\t\tref: \"orientation\",\n\t\t\t\t\t\t\t\t\toptions: [{\n\t\t\t\t\t\t\t\t\t\tvalue: \"O\",\n\t\t\t\t\t\t\t\t\t\tlabel: \"One Row\"\n\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\tvalue: \"M\",\n\t\t\t\t\t\t\t\t\t\tlabel: \"Multiple Rows\"\n\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\tdefaultValue: \"M\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonjtype: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tcomponent: \"radiobuttons\",\n\t\t\t\t\t\t\t\t\tlabel: \"Object Type\",\n\t\t\t\t\t\t\t\t\tref: \"objtype\",\n\t\t\t\t\t\t\t\t\toptions: [{\n\t\t\t\t\t\t\t\t\t\tvalue: \"C\",\n\t\t\t\t\t\t\t\t\t\tlabel: \"Checkbox\"\n\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\tvalue: \"R\",\n\t\t\t\t\t\t\t\t\t\tlabel: \"Radio\"\n\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\tvalue: \"B\",\n\t\t\t\t\t\t\t\t\t\tlabel: \"Button\"\n\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\tdefaultValue: \"R\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmultiple: {\n\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\tlabel: \"Toggle select\",\n\t\t\t\t\t\t\t\t\tref: \"multiple\",\n\t\t\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefaultvalue: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tlabel: \"Default selected value\",\n\t\t\t\t\t\t\t\t\tref: \"defaultselection\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbtnactive: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tlabel: \"Active style (css)\",\n\t\t\t\t\t\t\t\t\tref: \"btnactive\",\n\t\t\t\t\t\t\t\t\tdefaultValue: \"font-weight: bold; border: 1;\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbtninactive: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tlabel: \"InActive style  (css)\",\n\t\t\t\t\t\t\t\t\tref: \"btninactive\",\n\t\t\t\t\t\t\t\t\tdefaultValue: \"border: 0;\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tabout: {\n\t\t\t\t\t\t\ttype: \"items\",\n\t\t\t\t\t\t\tlabel: \"About\",\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\tbtninactive: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tlabel: \"stefan.stoichev@gmail.com\",\n\t\t\t\t\t\t\t\t\tref: \"about\",\n\t\t\t\t\t\t\t\t\tdefaultValue: \"https://github.com/countnazgul/Qlik-Sense-Filter-Extension\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsnapshot: {\n\t\t\tcanTakeSnapshot: true\n\t\t},\n\t\tpaint: function ($element, layout) {\n\t\t\tvar self = this, html = \"\";\n\t\t\tvar data = [];\n\t\t\tvar selected = 0;\n\t\t\tvar defaultvalue = null;\n\t\t\tvar defaultselectionList = layout.defaultselection.split(',');\n\t\t\tvar selectValues = [];\n\t\t\tvar allPossible = true;\n\n\t\t\tthis.backendApi.eachDataRow(function (rownum, row) {\t\t\t\t\n\t\t\t\tif (row[0].qState === 'S') {\n\t\t\t\t\tselected = 1;\n\t\t\t\t}\n\t\t\t\tdata.push(row[0]);\n\t\t\t\t\n\t\t\t\tif( row[0].qState != 'O' ) {\n\t\t\t\t\tallPossible = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdata.sort(function (a, b) { return parseInt(a.qNum) - parseInt(b.qNum) });\n\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tvar checked = '';\n\t\t\t\tvar text = data[i].qText;\n\n\t\t\t\tif (isDefaultSelected == false) {\n\t\t\t\t\tif (defaultselectionList.length > 0) {\n\t\t\t\t\t\tfor (var v = 0; v < defaultselectionList.length; v++) {\n\t\t\t\t\t\t\tif (data[i].qText == defaultselectionList[v]) {\n\t\t\t\t\t\t\t\tselectValues.push(data[i].qElemNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tselectValues.push(data[i].qElemNumber);\n\t\t\t\t}\n\n\t\t\t\tvar orientation = '';\n\t\t\t\tif (layout.orientation === undefined) {\n\t\t\t\t\torientation = '</br>';\n\t\t\t\t} else if (layout.orientation === 'M') {\n\t\t\t\t\torientation = '</br>';\n\t\t\t\t} else {\n\t\t\t\t\torientation = '&nbsp;&nbsp;';\n\t\t\t\t}\n\n\t\t\t\tvar objtype = '';\n\t\t\t\tif (layout.objtype === undefined) {\n\t\t\t\t\tobjtype = 'radio';\n\t\t\t\t} else if (layout.objtype === 'R') {\n\t\t\t\t\tobjtype = 'radio';\n\t\t\t\t} else if (layout.objtype === 'C') {\n\t\t\t\t\tobjtype = 'checkbox';\n\t\t\t\t} else {\n\t\t\t\t\tobjtype = 'button';\n\t\t\t\t}\n\n\t\t\t\t//console.log(data[i].qState)\n\t\t\t\tif (data[i].qState === \"S\" || data[i].qState === \"O\") {\n\t\t\t\t\tif (objtype != 'button') {\n\t\t\t\t\t\tif(allPossible == false) {\n\t\t\t\t\t\t\tchecked = ' checked ';\n\t\t\t\t\t\t\ttext = '<strong>' + data[i].qText + '</strong>';\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = data[i].qText;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar style = '';\n\t\t\t\tif (layout.btnactive === undefined) {\n\t\t\t\t\tstyle = \"font-weight: bold; border: 1;\";\n\t\t\t\t} else {\n\t\t\t\t\tstyle = layout.btnactive;\n\t\t\t\t}\n\n\t\t\t\tif (data[i].qState === \"S\") {\n\t\t\t\t\tstyle = ' style=\"' + style + '\"';\n\t\t\t\t} else {\n\t\t\t\t\tstyle = ' style=\"' + layout.btninactive + '\"';\n\t\t\t\t}\n\n\t\t\t\tif (objtype != 'button') {\n\t\t\t\t\thtml += '<input type=\"' + objtype + '\" name=\"' + layout.qInfo.qId + '\" ' + checked + ' class=\"data state' + data[i].qState + '\" data-value=\"'\n\t\t\t\t\t\t+ data[i].qElemNumber + '\"><label ' + style + '>' + text + '</label>' + orientation;\n\t\t\t\t} else {\n\t\t\t\t\thtml += '<input ' + style + '  type=\"' + objtype + '\" name=\"' + layout.qInfo.qId + ' class=\"data state' + data[i].qState + '\" data-value=\"'\n\t\t\t\t\t\t+ data[i].qElemNumber + '\" value=\"' + text + '\"> ' + orientation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if (selected === 0) {\n\t\t\t// \tif (selectValues.length != null) {\n\t\t\t// \t\tself.backendApi.selectValues(0, selectValues/*[defaultvalue.qElemNumber]*/, true);\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\tvar dim = 0;\n\n\t\t\tif (isDefaultSelected == false) {\n\t\t\t\tself.backendApi.selectValues(dim, selectValues, layout.multiple);\n\t\t\t}\n\n\t\t\t$element.html(html);\n\t\t\t//if (this.selectionsEnabled) {\n\t\t\t//$element.find('input').on('qv-activate', function () {\n\t\t\t//if (this.hasAttribute(\"data-value\")) {\n\t\t\t\t\t\t//var value = parseInt(this.getAttribute(\"data-value\"), 10),\n\n\t\t\tvar value = [];\n\n\t\t\tif (isDefaultSelected == true) {\n\t\t\t\t$element.find('input').each(function (i, input) {\n\t\t\t\t\tselectValues.push(parseInt(input.getAttribute(\"data-value\"), 10));\n\t\t\t\t\t//value.push(parseInt(input.getAttribute(\"data-value\"), 10));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$element.find('input').on('qv-activate', function () {\n\t\t\t\tvar valueS = parseInt(this.getAttribute(\"data-value\"), 10);\n\t\t\t\t//console.log(toggle)\n\t\t\t\tself.backendApi.selectValues(dim, [valueS], layout.multiple);\n\t\t\t});\n\n\t\t\tisDefaultSelected = true;\n\t\t\t// if (isDefaultSelected == true) {\n\t\t\t// \t//self.backendApi.selectValues(dim, value, toggle);\n\t\t\t// } else {\n\n\t\t\t// \tisDefaultSelected = true;\n\t\t\t// }\n\n\t\t\t//$(this).toggleClass(\"selected\");\n\t\t\t//}\n\t\t\t//});\n\t\t\t//\t}\n\t\t}\n\t};\n});\n"
}